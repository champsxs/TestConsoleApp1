
                   using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TestConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            double numone , numtwo = 0;
            double int_number = 0;
            string fname = "Chaminda", lname = "Amunugama";
            DateTime today_date = DateTime.Today;
            DateTime yest_day = DateTime.Today.AddDays(-1);
            DateTime tomo_day = DateTime.Today.AddDays(+1);

            Console.WriteLine("Hello " + fname + " " + lname + "..!");
            Console.WriteLine("Yesterdays date was :" + yest_day);
            Console.WriteLine("Todays date is : " + today_date.ToString("dd/MM/yyyy"));
            Console.WriteLine("Tomorrows date is :" + tomo_day);

            Console.WriteLine("Hello I like to know you");
            Console.WriteLine("What is your first name :");
            string guest_fname = Console.ReadLine();
            string guest_lname = Console.ReadLine();
            Console.WriteLine("You are :" + guest_fname + " " + guest_lname + " Nice to meet you");

            string ori_text = "The quick fox Jumped Over the DOG";
            string swiched_text = ori_text.Replace("quick", "brown").Replace("DOG", "lazy dog");
            Console.WriteLine("Original text :" + ori_text);
            Console.WriteLine("Swiched text :" + swiched_text);

            string ori = "[1,2,3,4,5]";
            string ori_num_patn = ori.Replace("[", "").Replace("]", "");
            List<string> numbers = ori_num_patn.Split(',').ToList();
            //numbers.Add("]");
            string[] to_compair = { "2", "3" };
            string[] to_add = { "6", "7", "8", "9", "10" };

            Console.WriteLine("Original number pattern" + ori);
            foreach (string compair in to_compair) {
                if (numbers.Contains(compair)) {
                    numbers.Remove(compair);
                }
            }
            numbers.AddRange(to_add);
            string inner_text="";
            foreach (var sxs in numbers) {
                  inner_text  = inner_text + "," + sxs;
            }
            int index = inner_text.IndexOf(",");
            if (index>=0)
            {
                inner_text = inner_text.Remove(index,1);
            }
            Console.Write("[");
            Console.Write(inner_text);
            Console.Write("]");


            //Addition 
            Console.WriteLine("Enter numbers to add followed by enter");
            string number_build="";
            double short_sum = 0;
            while (true)
            {
                string typed_string = Console.ReadLine();
                var input_array = typed_string.ToList();
                //string[] operators =  {"+","-","/","*"};
                var operators = new List<string>();
                bool strat_is_a_operator = false;
                double number_input = 0;

                string[] typed_numbers = typed_string.Split(new char[] { '+', '-','*','/' }, StringSplitOptions.RemoveEmptyEntries);
                int xx = 0;
                for (int i = 0 ; i<input_array.Count();i++) {
                    string current_text = input_array[i].ToString();
                        if("+" == current_text){
                            if(0==xx){
                                    strat_is_a_operator = true;
                                }
                            operators.Add("+");
                            
                        }
                        else if("-" == current_text){
                             if(0==xx){
                                        strat_is_a_operator = true;
                                    }
                            operators.Add("-");
                            
                        }
                        else if("/" == current_text){
                             if(0==xx){
                                    strat_is_a_operator = true;
                                }
                            operators.Add("/");
                              
                        }
                        else if("*" == current_text){
                             if(0==xx){
                                    strat_is_a_operator = true;
                                }
                            operators.Add("*");
                            
                        }
                       xx++; 
                }
                int jj = 0;
                double final = 0;
                if(typed_numbers.Length > 1)
                    {
                    for(int j=0;j<operators.Count;j++){

                        if("/" == operators[0])
                            {
                            if("0" == typed_numbers[0])
                                {
                                    Console.WriteLine("Error! Result is undefined");
                                }
                            }
                        else if("/" == operators[0])
                            {
                            if("0" == typed_numbers[1])
                                {
                                    Console.WriteLine("Error! Cannot divide by zero");     
                                } 
                            }
                        else if(operators.Count>0)
                            {
                            if(0 == j)
                                {
                                if(1 == typed_numbers.Length)
                                    {
                                        double t_numbers = 0;
                                        double.TryParse(typed_numbers[j], out t_numbers);
                                        final = calcuations(operators[j],t_numbers,final);
                                        //Console.WriteLine("Sum in " + final.ToString());
                                    }
                                else
                                    {
                                        double t_numbers1 = 0;
                                        double t_numbers2 = 0;
                                        double.TryParse(typed_numbers[j], out t_numbers1);
                                        double.TryParse(typed_numbers[j+1], out t_numbers2);
                                        final = calcuations(operators[j],t_numbers1,t_numbers2);
                                        //Console.WriteLine("Sum in " + final.ToString());
                                    }
                                
                                }
                            else
                                {
                                    double t_numbers = 0;
                                    double.TryParse(typed_numbers[j+1], out t_numbers);
                                    final = calcuations(operators[j],t_numbers,final);
                                    //Console.WriteLine("Sum in " + final.ToString());
                                }
                            }
                        

                    }
                }
                else
                {
                    double.TryParse(typed_numbers[0], out final);
                }

                double calcuations(string opt,double number, double sum){
                    if("+" == opt)
                        {
                          sum = sum + number;
                        }
                    else if("-" == opt)
                        {
                            sum = sum - number;
                        }
                    else if("/" == opt)
                        {
                            sum = sum / number;
                        }
                    else if("*" == opt)
                        {
                            sum = sum * number;
                        }
                return sum;
                }
                
                Console.WriteLine("Total is :" + final);
            }

            double convert_string_numbers(string num_str)
            {
                
                if (double.TryParse(Console.ReadLine(), out int_number))
                {
                    return int_number;
                }
                else{
                    return 0;
                }
                
            }
        }
    }
}

				   /*switch (current_text)
	                            {
                                case "+":
                                    double.TryParse(number_build, out number_input);
                                    short_sum = short_sum + number_input;
                                    number_build="";
                                    com = "empty";
                                    Console.WriteLine("Its a +" + short_sum);
                                    break;
                                case "-":
                                    double.TryParse(number_build, out number_input);
                                    short_sum = short_sum - number_input;
                                    number_build="";
                                    com = "empty";
                                    Console.WriteLine("Its a -" + short_sum);
                                    break;
                                case "*":
                                    double.TryParse(number_build, out number_input);
                                    short_sum = short_sum * number_input;
                                    number_build="";
                                    com = "empty";
                                    Console.WriteLine("Its a *" + short_sum);
                                    break;
                                case "/":
                                    double.TryParse(number_build, out number_input);
                                    short_sum = short_sum / number_input;
                                    number_build="";
                                    com = "empty";
                                    Console.WriteLine("Its a /" + short_sum);
                                    break;
		                        default:
                                    number_build = number_build + current_text;
                                    com = "updated";
                                    Console.WriteLine("No Operator found!" + number_build );
                                    break;
	                            }
                     */

                
                //if (double.TryParse(Console.ReadLine(), out numone))
                //{
                //    numtwo = numtwo + numone;
                //}
                //Console.WriteLine("Sum is " + numtwo);